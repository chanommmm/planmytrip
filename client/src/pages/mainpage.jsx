import { useState, useEffect } from 'react';
import './mainpage.css'; 
import { HeaderInput } from '../components/Header';
import DynamicInput from '../components/DynamicInput';
import DatePicker, { registerLocale } from "react-datepicker";
import "react-datepicker/dist/react-datepicker.css";
import { th } from "date-fns/locale";
import Result from '../components/Result';  // ‡∏ô‡∏≥ Result component ‡∏°‡∏≤‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô
import Footer from '../components/Footer';
import moment from 'moment-timezone';

registerLocale("th", th);

export default function Mainpage({ sendData }) {
  const [transport, setTransport] = useState(""); 
  const [date, setDate] = useState(null);        
  const [time, setTime] = useState("");          
  const [inputData, setInputData] = useState({ inputs: [], avoidTolls: false });
  const [planResult, setPlanResult] = useState(null);  // ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏à‡∏≤‡∏Å backend

  useEffect(() => {
    console.log("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Input ‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î:", inputData);
  }, [inputData]);

  const handleSubmit = async (overrideClosed = false) => {
    // 1. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ö‡∏∑‡πâ‡∏≠‡∏á‡∏ï‡πâ‡∏ô
    if (!transport || !date || !time || inputData.inputs.length === 0) {
      return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏Å‡πà‡∏≠‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô!");
    }

    // 2. ‡∏™‡∏£‡πâ‡∏≤‡∏á moment + format
    const [hour, minute] = time.split('.').map(n => parseInt(n, 10));
    const visitDateTime = moment(date) 
      .tz('Asia/Bangkok')
      .hour(hour)
      .minute(minute)
      .second(0); 
    const thaiDateTime = visitDateTime.format('YYYY-MM-DD HH:mm:ss'); 

    // 3. ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° payload ‡∏û‡∏£‡πâ‡∏≠‡∏° flag overrideClosed
    const request = {
      transport,
      date: thaiDateTime,
      time,
      locations: inputData.inputs.map(i => ({
        text: i.text,
        lat: i.lat,
        lng: i.lng,
        number: i.number,
        placeId: i.placeId,
        name: i.name,
        position: i.position,
      })),
      avoidTolls: inputData.avoidTolls,
      overrideClosed,
    };

    console.log("üìå ‡∏™‡πà‡∏á‡πÑ‡∏õ backend:", request);

    try {
      const resp = await sendData(request);
      console.log("üì• ‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö:", resp);

      // 4. ‡∏Å‡∏£‡∏ì‡∏µ backend ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏¥‡∏î
      if (resp.success === false && Array.isArray(resp.closed)) {
        const dateStr = visitDateTime.format('DD MMM YYYY');
        const msg = `‚ùå ‡∏û‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏¥‡∏î‡πÉ‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ${dateStr}:\n` +
                    `${resp.closed.join(', ')}\n\n` +
                    `‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏ï‡πà‡∏≠‡πÇ‡∏î‡∏¢‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡πÄ‡∏õ‡∏¥‡∏î‚Äì‡∏õ‡∏¥‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?`;
        if (window.confirm(msg)) {
          // ‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏Ç‡πâ‡∏≤‡∏°‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç ‡πÉ‡∏´‡πâ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ã‡πâ‡∏≥‡∏î‡πâ‡∏ß‡∏¢ overrideClosed = true
          return handleSubmit(true);
        } else {
          // ‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏Å‡∏•‡∏±‡∏ö‡πÑ‡∏õ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
          return;
        }
      }

      // 5. ‡∏Å‡∏£‡∏ì‡∏µ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      if (resp.success) {
        setPlanResult(resp.data);  // ‡πÄ‡∏Å‡πá‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏™‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß
        alert("‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à!");
      } else {
        // safety net
        throw new Error(resp.message || "‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÑ‡∏î‡πâ");
      }

    } catch (err) {
      console.error("‚ùå Error:", err);

      const confirmRetry = window.confirm(
        "‚ùå ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏´‡∏≤‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏ó‡∏µ‡πà‡∏î‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ‡πÉ‡∏ô‡∏ï‡∏≠‡∏ô‡∏ô‡∏µ‡πâ\n\n" +
        "‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏•‡∏≠‡∏á‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÉ‡∏´‡∏°‡πà‡πÇ‡∏î‡∏¢‡πÑ‡∏°‡πà‡∏™‡∏ô‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà?"
      );

      if (confirmRetry && !overrideClosed) {
        return handleSubmit(true); // ‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏û‡∏£‡πâ‡∏≠‡∏° override
      } else {
        return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏•‡∏≠‡∏á‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á");
      }
    } 
  };

  const generateTimeOptions = () => {
    const times = [];
    for (let h = 0; h < 24; h++) {
      for (let m of ['00', '30']) {
        times.push(`${h.toString().padStart(2, '0')}.${m}`);
      }
    }
    return times;
  };

  return (
    <div className="background">
      <HeaderInput />
      <div className="main-wrap">
        <div className="main-content">
          <div className="postimage">
            <img src="/post4.jpg" alt="" />
          </div>

          <div className="overlay-content">
            <div className="Title">‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á</div> 
            <div className="box">
              <div className="category-box">
                <label className="category-botton">
                  <input
                    type="radio"
                    name="transport"
                    value="car"
                    onChange={e => setTransport(e.target.value)}
                  />
                  <i className="bi bi-car-front-fill" />
                  <span className="type">‡∏£‡∏ñ‡∏¢‡∏ô‡∏ï‡πå</span>
                </label>
                <label className="category-botton"> 
                  <input
                    type="radio"
                    name="transport"
                    value="walk"
                    onChange={e => setTransport(e.target.value)}
                  />
                  <i className="bi bi-person-standing" />
                  <span className="type">‡πÄ‡∏î‡∏¥‡∏ô</span>
                </label>
              </div>

              <div className="main-box">
                <div className="date-time">
                  <label className="date-wrapper">
                    <i className="bi bi-calendar3" />
                    <DatePicker
                      selected={date}
                      onChange={d => setDate(d)}
                      locale="th"
                      dateFormat="dd MMMM yyyy"
                      placeholderText="‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á"
                      className="date-picker"
                    />
                  </label> 
                  <label className="time-wrapper">
                    <i className="bi bi-clock" />
                    <select
                      value={time}
                      onChange={e => setTime(e.target.value)}
                      className={`styled-select no-border ${!time ? 'placeholder' : ''}`}
                    >
                      <option value="" disabled>‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏ß‡∏•‡∏≤‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô</option>
                      {generateTimeOptions().map(t => (
                        <option key={t} value={t}>{t}</option>
                      ))}
                    </select>
                  </label>
                </div>

                <div className="location-box">
                  <DynamicInput onDataChange={setInputData} />
                </div>

                <div className="submit-box">
                  <button className="submit-button" onClick={() => handleSubmit(false)}>
                    ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏î‡∏¥‡∏ô‡∏ó‡∏≤‡∏á
                  </button>
                </div>
              </div>
            </div>

            {/* ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏°‡∏µ */}
            {planResult && (
              <div className="result-section">
                <Result routeData={planResult} /> {/* ‡∏™‡πà‡∏á‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á Result */}
              </div>
            )}

          </div>


          
        </div>
        <Footer />
      </div>
    </div>
  );
}
